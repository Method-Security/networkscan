# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from ..common.transport_type import TransportType
from ..common.service_type import ServiceType
from ..common.same_site_type import SameSiteType
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class BannerGrab(UniversalBaseModel):
    host: str
    i_p: str = pydantic.Field(alias="iP")
    port: int
    status_code: typing.Optional[str] = pydantic.Field(alias="statusCode", default=None)
    transport: TransportType
    service: ServiceType
    tls: bool
    version: str
    connection: typing.Optional[str] = None
    content_type: typing.Optional[str] = pydantic.Field(
        alias="contentType", default=None
    )
    same_site: typing.Optional[SameSiteType] = pydantic.Field(
        alias="sameSite", default=None
    )
    technologies: typing.Optional[typing.List[str]] = None
    metadata: typing.Optional[typing.Dict[str, str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
